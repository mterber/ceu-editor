/*
 * generated by Xtext 2.9.1
 */
package org.xtext.ceu.validation

import org.eclipse.xtext.validation.Check
import org.xtext.ceu.ceu.Dcl_var
import org.xtext.ceu.ceu.Dcl_var_plain_set
import org.xtext.ceu.ceu.CeuPackage
import java.util.Map
import org.xtext.ceu.ceu.BlockI
import org.xtext.ceu.ceu.StmtB
import java.util.HashMap

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class CeuValidator extends AbstractCeuValidator {
	
//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					CeuPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

	public static var VarNameToOrganismMapper = new HashMap<String, StmtB>

	public static val VARS_NOT_INITIALIZED = "VARS_NOT_INITIALIZED"

	@Check
	def checkIfVarsAreInitialized(Dcl_var d) {
		val referenceBlockI = d.type.type_cls_adt.eContents.get(0)
		var notInitializedVars = 0;
		for (vars : referenceBlockI.eContents) {
			notInitializedVars++
			if (vars instanceof Dcl_var) {
				for (Varsets : vars.eContents) {
					if (Varsets instanceof Dcl_var_plain_set) {
						notInitializedVars--
					}
				}
			}
		}
		
		if (notInitializedVars > 0 && d.dcl_var_org == null) {
			//VarNameToOrganismMapper.put(d.name, d.type.type_cls_adt)
			warning("Variables of the instantiated Organism are not initialized", 
					CeuPackage.Literals.DCL_VAR__DCL_VAR_ORG,
					VARS_NOT_INITIALIZED)
		}
	}
}
